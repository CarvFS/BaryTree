!
!   Authors:  Leighton W. Wilson  (lwwilson@umich.edu) 
!             Nathan J. Vaughn  (njvaughn@umich.edu) 
!
!   Department of Mathematics
!   University of Michigan, Ann Arbor
!
!   Copyright (c) 2019. The Regents of the University of Michigan.

  ____                _______            
 |  _ \              |__   __|           
 | |_) | __ _ _ __ _   _| |_ __ ___  ___ 
 |  _ < / _` | '__| | | | | '__/ _ \/ _ \
 | |_) | (_| | |  | |_| | | | |  __|  __/
 |____/ \__,_|_|   \__, |_|_|  \___|\___|
                    __/ |                
                   |___/                 


This folder contains interfaces between BaryTree and other languages.
The treecode library itself contains treedriverWrapper.  This function takes as input 
pointers  to the particle arrays, as well runtime parameters such as kernel information, 
MAC parameter, and batch and cluster size.  This function first constructs the particle 
structs then calls the treedriver.
The interfaces contained in these subdirectories are responsible for supplying 
treedriverWrapper with the necessary pointers to particle arrays and the runtime metadata.

The python folder contains treecodeWrappers.py, which uses the ctypes module to load
the library, set the argument types, construct pointers to the numpy arrays, and call the
treedriverWrapper.   
testTreecodeWrapper.py imports the python wrapper, generates some random particles, 
and calls the treecode once.
